name: Release
# 触发条件: 这里是push以”v“开头的tag触发
on:
    push:
      # 根据branch或者tags来触发
      branches:
        - build
  
      tags:
        - "v*"
      # 忽略的标签类型，不触发构建流程(和tags不能同时写)
      # tags-ignore:
      #   - "d*"
# 一次持续集成的运行，可以完成多个任务(下面就build)
jobs:
    builds:
      # 构建的系统(ubuntu、windows、macos)
      runs-on: ubuntu-latest
  
      # 可以依赖其他job
      # needs: xxxJob、[job1, job2]
  
      # 构建权限，ncipollo/release-action需要使用
      permissions:
        contents: write
  
      # 操作步骤(按顺序执行)
      steps:
  
        # 拉取仓库代码
        - uses: actions/checkout@v4
  
        # 设置Java运行环境(temurin是开源jdk)，可以设置为: 1.8
        - uses: actions/setup-java@v4
          with:
            distribution: temurin
            java-version: 17
  
        # 设置gradle环境(比如: 6.5)、打包命令
        - uses: gradle/actions/setup-gradle@v3
          with:
            gradle-version: wrapper
            arguments: assembleRelease
  
        # 签名apk
        - uses: r0adkll/sign-android-release@v1
          name: Sign app APK
          id: sign_app
          with:
            releaseDirectory: app/build/outputs/apk/release
            signingKeyBase64: ${{ secrets.SIGNING_KEY }}
            alias: ${{ secrets.ALIAS }}
            keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
            keyPassword: ${{ secrets.KEY_PASSWORD }}
          # 还能设置build-tools version，29.0.3好像不支持了
          env:
            # override default build-tools version (29.0.3) -- optional
            BUILD_TOOLS_VERSION: "34.0.0"

        - uses: actions/upload-artifact@v4
          with:
            name: Signed app bundle
            path: ${{steps.sign_app.outputs.signedReleaseFile}}
  
        # 发布
        - uses: ncipollo/release-action@v1
          with:
            # 要包含到Release Assets中的文件
            artifacts: "*.apk"
            # 会使用一个临时的token来创建Release
            token: ${{ github.token }}
            # 自动生成一些变化列表之类的内容。
            generateReleaseNotes: true
